{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ONKAR\\\\OneDrive\\\\Desktop\\\\SEM-4\\\\Projects\\\\DBMS\\\\crop sowing guide\\\\frontend\\\\src\\\\components\\\\Area.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../css/CropDistribution.css\";\nimport Chart from \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Area(props) {\n  _s2();\n  var _s = $RefreshSig$();\n  let [cropdata, setCropdata] = useState([]);\n  let [cropnames, setCropnames] = useState([]);\n  let [cropArea, setCropArea] = useState([]);\n  const fetchCropData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/getArea\", {\n        method: \"post\",\n        body: JSON.stringify({}),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      setCropdata(data.data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const createChart = () => {\n    const ctx = document.getElementById(\"myChartArea\");\n    new Chart(ctx, {\n      type: \"bar\",\n      data: {\n        labels: cropnames,\n        datasets: [{\n          label: \"Crop area\",\n          data: cropArea,\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  };\n  useEffect(() => {\n    fetchCropData();\n  }, []);\n  _s(useEffect(_s(() => {\n    _s();\n    if (cropdata.length > 0) {\n      useEffect(() => {\n        let ids = cropdata.map(item => item._id);\n        let area = cropdata.map(item => item.totalArea);\n        if (cropnames.length > 0 && cropArea.length > 0) {\n          setCropnames(ids);\n          setCropArea(area);\n          createChart();\n        }\n      }, [cropArea, cropnames]);\n    }\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"), [cropdata]), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navCropDistribution\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"containerCropDistribution\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Area\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crop_sowingdata_bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prevyeargraph\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontFamily: \"sans-serif\",\n            fontWeight: 600,\n            color: \"blueviolet\"\n          },\n          children: \"Area Sowing Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 800,\n            height: 400\n          },\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"myChartArea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s2(Area, \"HJQEs4d7gekiENC/zlqqY2K82pY=\");\n_c = Area;\nvar _c;\n$RefreshReg$(_c, \"Area\");","map":{"version":3,"names":["React","useEffect","useState","Link","Chart","jsxDEV","_jsxDEV","Fragment","_Fragment","Area","props","_s2","_s","$RefreshSig$","cropdata","setCropdata","cropnames","setCropnames","cropArea","setCropArea","fetchCropData","response","fetch","method","body","JSON","stringify","headers","data","json","error","console","createChart","ctx","document","getElementById","type","labels","datasets","label","borderWidth","options","scales","y","beginAtZero","length","ids","map","item","_id","area","totalArea","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","fontFamily","fontWeight","color","width","height","id","_c","$RefreshReg$"],"sources":["C:/Users/ONKAR/OneDrive/Desktop/SEM-4/Projects/DBMS/crop sowing guide/frontend/src/components/Area.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"../css/CropDistribution.css\";\r\nimport Chart from \"chart.js/auto\";\r\n\r\nexport default function Area(props) {\r\n  let [cropdata, setCropdata] = useState([]);\r\n  let [cropnames,setCropnames] = useState([]);\r\n  let [cropArea,setCropArea] = useState([]);\r\n\r\n  const fetchCropData = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/getArea\", {\r\n        method: \"post\",\r\n        body: JSON.stringify({}),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      setCropdata(data.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const createChart = () => {\r\n    const ctx = document.getElementById(\"myChartArea\");\r\n    new Chart(ctx, {\r\n      type: \"bar\",\r\n      data: {\r\n        labels: cropnames,\r\n        datasets: [\r\n          {\r\n            label: \"Crop area\",\r\n            data: cropArea,\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCropData();\r\n  }, []);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (cropdata.length > 0) {\r\n      useEffect(()=>{\r\n        let ids = cropdata.map(item=>item._id);\r\n       let area = cropdata.map(item=>item.totalArea);\r\n      if(cropnames.length>0 && cropArea.length>0){\r\n        setCropnames(ids)\r\n        setCropArea(area)\r\n        createChart();\r\n      }\r\n      },[cropArea,cropnames])\r\n    }\r\n  }, [cropdata]);\r\n\r\n  return (\r\n    <>\r\n    <nav className=\"navCropDistribution\">\r\n        <div className=\"containerCropDistribution\">\r\n         <h1>Area</h1>\r\n        </div>\r\n        {/* <Link to={`/${backurl}`}>Back</Link> */}\r\n    </nav>\r\n      <div className=\"crop_sowingdata_bar\">\r\n        <div className=\"prevyeargraph\">\r\n          <h2\r\n            style={{\r\n              fontFamily: \"sans-serif\",\r\n              fontWeight: 600,\r\n              color: \"blueviolet\",\r\n            }}\r\n          >\r\n           Area Sowing Distribution\r\n          </h2>\r\n          <div style={{ width: 800, height: 400 }}>\r\n            <canvas id=\"myChartArea\"></canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}