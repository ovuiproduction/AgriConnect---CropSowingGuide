{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ONKAR\\\\OneDrive\\\\Desktop\\\\SEM-4\\\\Projects\\\\DBMS\\\\crop sowing guide\\\\frontend\\\\src\\\\components\\\\CropDistribution.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../css/CropDistribution.css\";\nimport Chart from \"chart.js/auto\";\nimport CropArea from \"./CropArea\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CropDistribution(props) {\n  _s();\n  let [cropdata, setCropdata] = useState([]);\n  const {\n    state,\n    crop,\n    division\n  } = props;\n  let chart;\n  let piechart;\n  const states = [\"maharashtra\", \"uttarpradesh\", \"madhyapradesh\", \"westbengal\", \"punjab\"];\n  let backurl = \"\";\n  if (state === \"Maharashtra\") {\n    backurl = states[0];\n  } else if (state == \"Uttar Pradesh\") {\n    backurl = states[1];\n  } else if (state == \"Madhya Pradesh\") {\n    backurl = states[2];\n  } else if (state == \"West Bengal\") {\n    backurl = states[3];\n  } else if (state == \"Punjab\") {\n    backurl = states[4];\n  }\n  const fetchCropData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/cropsowingratio\", {\n        method: \"post\",\n        body: JSON.stringify({\n          state: state,\n          crop: crop,\n          division: division\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      setCropdata(data.data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const createChart = () => {\n    if (chart) chart.destroy();\n    const ctx = document.getElementById(\"myChart\");\n    chart = new Chart(ctx, {\n      type: \"bar\",\n      data: {\n        labels: division,\n        datasets: [{\n          label: \"Crop area\",\n          data: cropdata,\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  };\n  const createPieChart = () => {\n    if (piechart) piechart.destroy();\n    const ctx = document.getElementById(\"piechart\");\n    piechart = new Chart(ctx, {\n      type: \"bar\",\n      data: {\n        labels: division,\n        datasets: [{\n          label: \"Crop area\",\n          data: cropdata,\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  };\n  useEffect(() => {\n    fetchCropData();\n  }, []);\n  useEffect(() => {\n    if (cropdata.length > 0) {\n      createChart();\n      createPieChart();\n    }\n  }, [cropdata]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navCropDistribution\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"containerCropDistribution\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: crop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/${backurl}`,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crop_sowingdata_bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graphBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontFamily: \"sans-serif\",\n            fontWeight: 600,\n            color: \"blueviolet\"\n          },\n          children: [crop, \" Sowing Distribution in \", state]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 800,\n            height: 400\n          },\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"myChart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 800,\n            height: 400\n          },\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"myChart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CropArea, {\n      state: state,\n      crop: crop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(CropDistribution, \"B65eAZ7NpBjXarWsZloKxByJmc4=\");\n_c = CropDistribution;\nvar _c;\n$RefreshReg$(_c, \"CropDistribution\");","map":{"version":3,"names":["React","useEffect","useState","Link","Chart","CropArea","jsxDEV","_jsxDEV","Fragment","_Fragment","CropDistribution","props","_s","cropdata","setCropdata","state","crop","division","chart","piechart","states","backurl","fetchCropData","response","fetch","method","body","JSON","stringify","headers","data","json","error","console","createChart","destroy","ctx","document","getElementById","type","labels","datasets","label","borderWidth","options","scales","y","beginAtZero","createPieChart","length","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","style","fontFamily","fontWeight","color","width","height","id","_c","$RefreshReg$"],"sources":["C:/Users/ONKAR/OneDrive/Desktop/SEM-4/Projects/DBMS/crop sowing guide/frontend/src/components/CropDistribution.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"../css/CropDistribution.css\";\r\nimport Chart from \"chart.js/auto\";\r\nimport CropArea from \"./CropArea\";\r\n\r\nexport default function CropDistribution(props) {\r\n  let [cropdata, setCropdata] = useState([]);\r\n  const { state, crop, division } = props;\r\n  let chart;\r\n  let piechart;\r\n  const states = [\"maharashtra\",\"uttarpradesh\",\"madhyapradesh\",\"westbengal\",\"punjab\"];\r\n  let backurl = \"\";\r\n  if(state === \"Maharashtra\"){\r\n    backurl=states[0];\r\n  }\r\n  else if(state == \"Uttar Pradesh\"){\r\n    backurl=states[1];\r\n  }\r\n  else if(state == \"Madhya Pradesh\"){\r\n    backurl=states[2];\r\n  }\r\n  else if(state == \"West Bengal\"){\r\n    backurl=states[3];\r\n  }\r\n  else if(state == \"Punjab\"){\r\n    backurl=states[4];\r\n  }\r\n  const fetchCropData = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/cropsowingratio\", {\r\n        method: \"post\",\r\n        body: JSON.stringify({ state: state, crop: crop, division: division }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      setCropdata(data.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const createChart = () => {\r\n    if(chart) chart.destroy();\r\n    const ctx = document.getElementById(\"myChart\");\r\n    chart = new Chart(ctx, {\r\n      type: \"bar\",\r\n      data: {\r\n        labels: division,\r\n        datasets: [\r\n          {\r\n            label: \"Crop area\",\r\n            data: cropdata,\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n\r\n  const createPieChart = () => {\r\n    if(piechart) piechart.destroy();\r\n    const ctx = document.getElementById(\"piechart\");\r\n    piechart = new Chart(ctx, {\r\n      type: \"bar\",\r\n      data: {\r\n        labels: division,\r\n        datasets: [\r\n          {\r\n            label: \"Crop area\",\r\n            data: cropdata,\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCropData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (cropdata.length > 0) {\r\n      createChart();\r\n      createPieChart();\r\n    }\r\n  }, [cropdata]);\r\n\r\n  return (\r\n    <>\r\n    <nav className=\"navCropDistribution\">\r\n        <div className=\"containerCropDistribution\">\r\n         <h1>{crop}</h1>\r\n        </div>\r\n        <Link to={`/${backurl}`}>Back</Link>\r\n    </nav>\r\n      <div className=\"crop_sowingdata_bar\">\r\n        <div className=\"graphBlock\">\r\n          <h2\r\n            style={{\r\n              fontFamily: \"sans-serif\",\r\n              fontWeight: 600,\r\n              color: \"blueviolet\",\r\n            }}\r\n          >\r\n            {crop} Sowing Distribution in {state}\r\n          </h2>\r\n          <div style={{ width: 800, height: 400 }}>\r\n            <canvas id=\"myChart\"></canvas>\r\n          </div>\r\n          <div style={{ width: 800, height: 400 }}>\r\n            <canvas id=\"myChart\"></canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <CropArea state={state} crop={crop}/>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAAQC,IAAI,QAAO,kBAAkB;AACrC,OAAO,6BAA6B;AACpC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,eAAe,SAASC,gBAAgBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC9C,IAAI,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM;IAAEa,KAAK;IAAEC,IAAI;IAAEC;EAAS,CAAC,GAAGN,KAAK;EACvC,IAAIO,KAAK;EACT,IAAIC,QAAQ;EACZ,MAAMC,MAAM,GAAG,CAAC,aAAa,EAAC,cAAc,EAAC,eAAe,EAAC,YAAY,EAAC,QAAQ,CAAC;EACnF,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAGN,KAAK,KAAK,aAAa,EAAC;IACzBM,OAAO,GAACD,MAAM,CAAC,CAAC,CAAC;EACnB,CAAC,MACI,IAAGL,KAAK,IAAI,eAAe,EAAC;IAC/BM,OAAO,GAACD,MAAM,CAAC,CAAC,CAAC;EACnB,CAAC,MACI,IAAGL,KAAK,IAAI,gBAAgB,EAAC;IAChCM,OAAO,GAACD,MAAM,CAAC,CAAC,CAAC;EACnB,CAAC,MACI,IAAGL,KAAK,IAAI,aAAa,EAAC;IAC7BM,OAAO,GAACD,MAAM,CAAC,CAAC,CAAC;EACnB,CAAC,MACI,IAAGL,KAAK,IAAI,QAAQ,EAAC;IACxBM,OAAO,GAACD,MAAM,CAAC,CAAC,CAAC;EACnB;EACA,MAAME,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEb,KAAK,EAAEA,KAAK;UAAEC,IAAI,EAAEA,IAAI;UAAEC,QAAQ,EAAEA;QAAS,CAAC,CAAC;QACtEY,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCjB,WAAW,CAACgB,IAAI,CAACA,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAGhB,KAAK,EAAEA,KAAK,CAACiB,OAAO,CAAC,CAAC;IACzB,MAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;IAC9CpB,KAAK,GAAG,IAAId,KAAK,CAACgC,GAAG,EAAE;MACrBG,IAAI,EAAE,KAAK;MACXT,IAAI,EAAE;QACJU,MAAM,EAAEvB,QAAQ;QAChBwB,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,WAAW;UAClBZ,IAAI,EAAEjB,QAAQ;UACd8B,WAAW,EAAE;QACf,CAAC;MAEL,CAAC;MACDC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,WAAW,EAAE;UACf;QACF;MACF;IACF,CAAC,CAAC;EACJ,CAAC;EAGD,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAG7B,QAAQ,EAAEA,QAAQ,CAACgB,OAAO,CAAC,CAAC;IAC/B,MAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;IAC/CnB,QAAQ,GAAG,IAAIf,KAAK,CAACgC,GAAG,EAAE;MACxBG,IAAI,EAAE,KAAK;MACXT,IAAI,EAAE;QACJU,MAAM,EAAEvB,QAAQ;QAChBwB,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,WAAW;UAClBZ,IAAI,EAAEjB,QAAQ;UACd8B,WAAW,EAAE;QACf,CAAC;MAEL,CAAC;MACDC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,WAAW,EAAE;UACf;QACF;MACF;IACF,CAAC,CAAC;EACJ,CAAC;EAED9C,SAAS,CAAC,MAAM;IACdqB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAENrB,SAAS,CAAC,MAAM;IACd,IAAIY,QAAQ,CAACoC,MAAM,GAAG,CAAC,EAAE;MACvBf,WAAW,CAAC,CAAC;MACbc,cAAc,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAACnC,QAAQ,CAAC,CAAC;EAEd,oBACEN,OAAA,CAAAE,SAAA;IAAAyC,QAAA,gBACA3C,OAAA;MAAK4C,SAAS,EAAC,qBAAqB;MAAAD,QAAA,gBAChC3C,OAAA;QAAK4C,SAAS,EAAC,2BAA2B;QAAAD,QAAA,eACzC3C,OAAA;UAAA2C,QAAA,EAAKlC;QAAI;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACNhD,OAAA,CAACJ,IAAI;QAACqD,EAAE,EAAG,IAAGnC,OAAQ,EAAE;QAAA6B,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACJhD,OAAA;MAAK4C,SAAS,EAAC,qBAAqB;MAAAD,QAAA,eAClC3C,OAAA;QAAK4C,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACzB3C,OAAA;UACEkD,KAAK,EAAE;YACLC,UAAU,EAAE,YAAY;YACxBC,UAAU,EAAE,GAAG;YACfC,KAAK,EAAE;UACT,CAAE;UAAAV,QAAA,GAEDlC,IAAI,EAAC,0BAAwB,EAACD,KAAK;QAAA;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eACLhD,OAAA;UAAKkD,KAAK,EAAE;YAAEI,KAAK,EAAE,GAAG;YAAEC,MAAM,EAAE;UAAI,CAAE;UAAAZ,QAAA,eACtC3C,OAAA;YAAQwD,EAAE,EAAC;UAAS;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC,eACNhD,OAAA;UAAKkD,KAAK,EAAE;YAAEI,KAAK,EAAE,GAAG;YAAEC,MAAM,EAAE;UAAI,CAAE;UAAAZ,QAAA,eACtC3C,OAAA;YAAQwD,EAAE,EAAC;UAAS;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNhD,OAAA,CAACF,QAAQ;MAACU,KAAK,EAAEA,KAAM;MAACC,IAAI,EAAEA;IAAK;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACrC,CAAC;AAEP;AAAC3C,EAAA,CAlIuBF,gBAAgB;AAAAsD,EAAA,GAAhBtD,gBAAgB;AAAA,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}