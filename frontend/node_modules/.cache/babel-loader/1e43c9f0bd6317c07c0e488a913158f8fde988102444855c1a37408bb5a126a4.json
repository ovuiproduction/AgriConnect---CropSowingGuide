{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ONKAR\\\\OneDrive\\\\Desktop\\\\crop sowing guide\\\\frontend\\\\src\\\\components\\\\StateCropStatistics.jsx\",\n  _s = $RefreshSig$();\nimport react from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../css/SowingGuide.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function StateCropStatistics(props) {\n  _s();\n  const {\n    state,\n    crops\n  } = props;\n  const croplist = Object.keys(crops);\n  let [cropdata, setCropdata] = useState([]);\n  const fetchCropData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/statecropreview\", {\n        method: \"post\",\n        body: JSON.stringify({\n          state: state,\n          crops: crops\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      setCropdata(data.data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const createChart = () => {\n    const ctx = document.getElementById(\"myChart\");\n    new Chart(ctx, {\n      type: \"bar\",\n      data: {\n        labels: croplist,\n        datasets: [{\n          label: \"Crop area\",\n          data: cropdata,\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  };\n  useEffect(() => {\n    fetchCropData();\n  }, []);\n  useEffect(() => {\n    if (cropdata.length > 0) {\n      createChart();\n    }\n  }, [cropdata]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      href: \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\",\n      rel: \"stylesheet\",\n      integrity: \"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\",\n      crossOrigin: \"anonymous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navsowingguide\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"containernav\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/home\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"navimg\",\n            src: require(\"../Assets/images/HomeLogo.png\"),\n            alt: \"logo\",\n            loading: \"lazy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/sowingguide\",\n        className: \"back\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        margin: \"30px auto auto 50px\",\n        fontSize: \"20px\",\n        color: \"gray\"\n      },\n      htmlFor: \".commodity\",\n      children: [\"Crops In \", state]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commodity\",\n      children: Object.keys(crops).map(cropname => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"none\"\n        },\n        className: \"card commoditycard\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"card-img-top commoditylogo\",\n          src: crops[cropname],\n          alt: cropname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: cropname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/${state}/${cropname}`,\n            className: \"btn btn-primary\",\n            children: \"Explore\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, cropname, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"overviewofstate\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prevyeargraph\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontFamily: \"sans-serif\",\n            fontWeight: 600,\n            color: \"blueviolet\"\n          },\n          children: state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 800,\n            height: 400\n          },\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"myChart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(StateCropStatistics, \"B65eAZ7NpBjXarWsZloKxByJmc4=\");\n_c = StateCropStatistics;\nvar _c;\n$RefreshReg$(_c, \"StateCropStatistics\");","map":{"version":3,"names":["react","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","StateCropStatistics","props","_s","state","crops","croplist","Object","keys","cropdata","setCropdata","useState","fetchCropData","response","fetch","method","body","JSON","stringify","headers","data","json","error","console","createChart","ctx","document","getElementById","Chart","type","labels","datasets","label","borderWidth","options","scales","y","beginAtZero","useEffect","length","children","href","rel","integrity","crossOrigin","fileName","_jsxFileName","lineNumber","columnNumber","className","to","src","require","alt","loading","style","margin","fontSize","color","htmlFor","map","cropname","border","class","fontFamily","fontWeight","width","height","id","_c","$RefreshReg$"],"sources":["C:/Users/ONKAR/OneDrive/Desktop/crop sowing guide/frontend/src/components/StateCropStatistics.jsx"],"sourcesContent":["import react from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/SowingGuide.css\";\r\n\r\nexport default function StateCropStatistics(props) {\r\n  const { state, crops } = props;\r\n  const croplist = Object.keys(crops);\r\n  let [cropdata, setCropdata] = useState([]);\r\n  const fetchCropData = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/statecropreview\", {\r\n        method: \"post\",\r\n        body: JSON.stringify({ state: state, crops: crops }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      setCropdata(data.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n  const createChart = () => {\r\n    const ctx = document.getElementById(\"myChart\");\r\n    new Chart(ctx, {\r\n      type: \"bar\",\r\n      data: {\r\n        labels: croplist,\r\n        datasets: [\r\n          {\r\n            label: \"Crop area\",\r\n            data: cropdata,\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCropData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (cropdata.length > 0) {\r\n      createChart();\r\n    }\r\n  }, [cropdata]);\r\n\r\n  return (\r\n    <>\r\n      <link\r\n        href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\"\r\n        rel=\"stylesheet\"\r\n        integrity=\"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\"\r\n        crossOrigin=\"anonymous\"\r\n      ></link>\r\n      <nav className=\"navsowingguide\">\r\n        <div className=\"containernav\">\r\n          <Link to=\"/home\">\r\n            <img\r\n              className=\"navimg\"\r\n              src={require(\"../Assets/images/HomeLogo.png\")}\r\n              alt=\"logo\"\r\n              loading=\"lazy\"\r\n            />\r\n          </Link>\r\n          <p>{state}</p>\r\n        </div>\r\n        <Link to=\"/sowingguide\" className=\"back\">\r\n          Back\r\n        </Link>\r\n      </nav>\r\n      <label\r\n        style={{\r\n          margin: \"30px auto auto 50px\",\r\n          fontSize: \"20px\",\r\n          color: \"gray\",\r\n        }}\r\n        htmlFor=\".commodity\"\r\n      >\r\n        Crops In {state}\r\n      </label>\r\n      <div className=\"commodity\">\r\n        {Object.keys(crops).map((cropname) => (\r\n          <div\r\n            style={{ border: \"none\" }}\r\n            className=\"card commoditycard\"\r\n            key={cropname}\r\n          >\r\n            <img\r\n              className=\"card-img-top commoditylogo\"\r\n              src={crops[cropname]}\r\n              alt={cropname}\r\n            />\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{cropname}</h5>\r\n              <Link to={`/${state}/${cropname}`} className=\"btn btn-primary\">\r\n                Explore\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div class=\"overviewofstate\">\r\n        <div className=\"prevyeargraph\">\r\n          <h2\r\n            style={{\r\n              fontFamily: \"sans-serif\",\r\n              fontWeight: 600,\r\n              color: \"blueviolet\",\r\n            }}\r\n          >\r\n            {state}\r\n          </h2>\r\n          <div style={{ width: 800, height: 400 }}>\r\n            <canvas id=\"myChart\"></canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}